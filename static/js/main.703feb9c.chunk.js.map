{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","fetch","then","response","json","FindMovie","setMovies","useState","selectedMovie","setSelectedMovie","setTitle","movieLoadError","setMovieLoadError","movieExistError","setMovieExistError","loadMovie","a","load","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","find","uniqueMovie","App","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAa,UAAQ,aAApC,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,cAAlC,SAAiDD,EAAMK,aAI3D,sBAAKJ,UAAU,UAAU,UAAQ,UAAjC,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,6BCbd,SAASC,EAASC,GACvB,OAAOC,MAAM,GAAD,OAHE,2DAGF,OAAcD,IACvBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCMxB,IAAMC,EAA6B,SAAC,GAA2B,IAAzBT,EAAwB,EAAxBA,OAAQU,EAAgB,EAAhBA,UACnD,EAA0CC,mBAAuB,MAAjE,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOP,EAAP,KAAcU,EAAd,KAEA,EAA4CH,oBAAS,GAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KACA,EAA8CL,oBAAS,GAAvD,mBAAOM,EAAP,KAAwBC,EAAxB,KAEMC,EAAS,uCAAG,4BAAAC,EAAA,+EAEKjB,EAASC,GAFd,QAERiB,EAFQ,QAILxB,OACPgB,EAAiBQ,GALL,gDAQdR,EAAiB,MACjBG,GAAkB,GATJ,yDAAH,qDA2Bf,OACE,qCACE,uBAAMvB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ6B,QAAQ,cAAjC,yBAIA,qBAAK7B,UAAU,UAAf,SACE,uBACE8B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZhC,UAAU,QACViC,MAAOtB,EACPuB,SAAU,SAACC,GACTd,EAASc,EAAMC,OAAOH,YAK3BX,GACC,mBAAGtB,UAAU,iBAAb,kDAKDwB,GACC,mBAAGxB,UAAU,iBAAb,wCAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE8B,KAAK,SACL9B,UAAU,kBACVqC,QAASX,EAHX,4BASF,qBAAK1B,UAAU,UAAf,SACE,wBACE8B,KAAK,SACL9B,UAAU,oBACVqC,QA/DK,WACXlB,IACFC,EAAiB,OACEb,EAAO+B,MAAK,SAAAC,GAAW,OAAIA,EAAY9B,SACpDU,EAAcV,UAGlBQ,EAAUE,GAEVM,GAAmB,KAmDf,qCAWN,sBAAKzB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCmB,GACC,cAAC,EAAD,CAAWpB,MAAOoB,WCnGfqB,EAAgB,WAC3B,MAA4BtB,mBAAkB,IAA9C,mBAAOX,EAAP,KAAeU,EAAf,KAMA,OACE,sBAAKjB,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CACEO,OAAQA,EACRU,UAZiB,SAAClB,GACxBkB,EAAU,GAAD,mBAAKV,GAAL,CAAaR,cCL1B0C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.703feb9c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=fc0e54a9&t=';\n\nexport function getMovie(title: string) :Promise<Movie> {\n  return fetch(`${API_URL}${title}`)\n    .then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[],\n  setMovies: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [selectedMovie, setSelectedMovie] = useState<Movie | null>(null);\n  const [title, setTitle] = useState('');\n\n  const [movieLoadError, setMovieLoadError] = useState(false);\n  const [movieExistError, setMovieExistError] = useState(false);\n\n  const loadMovie = async () => {\n    try {\n      const load = await getMovie(title);\n\n      if (load.Title) {\n        setSelectedMovie(load);\n      }\n    } catch {\n      setSelectedMovie(null);\n      setMovieLoadError(true);\n    }\n  };\n\n  const addMovie = () => {\n    if (selectedMovie) {\n      setSelectedMovie(null);\n      const isUnique = !(movies.find(uniqueMovie => uniqueMovie.imdbID\n        === selectedMovie.imdbID));\n\n      if (isUnique) {\n        setMovies(selectedMovie);\n      } else {\n        setMovieExistError(true);\n      }\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n              }}\n            />\n          </div>\n\n          {movieLoadError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n          {movieExistError && (\n            <p className=\"help is-danger\">\n              Movie is already added.\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={loadMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {selectedMovie && (\n          <MovieCard movie={selectedMovie} />\n        )}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const setMoviesHandler = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={setMoviesHandler}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}